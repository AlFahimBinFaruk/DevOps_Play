events{}

http {
    # Defines a group of backend servers named "backend" that nginx can load balance between
    # by default it will use "round-robin" load balancing method
    upstream backend{
        # Creates a shared memory zone of 64KB to store the upstream configuration. This allows nginx workers to share information about server states and enables dynamic reconfiguration
        zone backend 64k;
        
        # - Points to your FastAPI service on port 5000
        # - Resolve tells nginx to periodically re-resolve the DNS name fastapi_app. This is crucial for Docker scaling because when you scale up/down, Docker creates/destroys containers with the same service name, and nginx needs to discover the new container IPs
        server fastapi_app:5000 resolve;
    }

    server {
        # Nginx listens on port 80 (HTTP)
        listen 80;
        # Handles all requests (catch-all pattern)
        location / {
            # Forwards requests to the upstream group we defined above
            proxy_pass http://backend;
            # These preserve client information when forwarding requests
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    
    # Tells nginx to use Docker's internal DNS server (127.0.0.11) for resolving hostnames(fastapi_app= (ip_address:port)=172.20.0.5:5000 ).
    # Cache DNS responses for 10 seconds, then re-resolve.
    resolver 127.0.0.11 valid=10s;
}